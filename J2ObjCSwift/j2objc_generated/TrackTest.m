//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Java/src/test/java/harrycheung/map/shared/TrackTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Track.h"
#include "TrackTest.h"
#include "java/lang/Integer.h"
#include "org/hamcrest/CoreMatchers.h"
#include "org/hamcrest/Matcher.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

@implementation HCMTrackTest

- (void)trackLoadFromJSON {
  NSString *trackJSON = @"{\"track\": {\"id\": \"1000\",\"name\": \"Test Raceway\",\"gates\": [{\"gate_type\": \"SPLIT\",\"latitude\": \"37.451775\",\"longitude\": \"-122.203657\",\"bearing\": \"136\",\"split_number\": \"1\"},{\"gate_type\": \"SPLIT\",\"latitude\": \"37.450127\",\"longitude\": \"-122.205499\",\"bearing\": \"326\",\"split_number\": \"2\"},{\"gate_type\": \"START_FINISH\",\"latitude\": \"37.452602\",\"longitude\": \"-122.207069\",\"bearing\": \"32\",\"split_number\": \"3\"}]}}";
  HCMTrack *track = IOSObjectArray_Get(nil_chk(HCMTrack_load__WithNSString_(trackJSON)), 0);
  OrgJunitAssert_assertNotNullWithId_(track);
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMTrack *) nil_chk(track))->id__), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(1000)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(track->name_, OrgHamcrestCoreMatchers_isWithId_(@"Test Raceway"));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_([track numSplits]), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(3)));
}

- (void)trackLoadFromJSONArray {
  NSString *trackJSON = @"[{\"track\": {\"id\": \"1000\",\"name\": \"Test Raceway\",\"gates\": [{\"gate_type\": \"SPLIT\",\"latitude\": \"37.451775\",\"longitude\": \"-122.203657\",\"bearing\": \"136\",\"split_number\": \"1\"},{\"gate_type\": \"SPLIT\",\"latitude\": \"37.450127\",\"longitude\": \"-122.205499\",\"bearing\": \"326\",\"split_number\": \"2\"},{\"gate_type\": \"START_FINISH\",\"latitude\": \"37.452602\",\"longitude\": \"-122.207069\",\"bearing\": \"32\",\"split_number\": \"3\"}]}}]";
  HCMTrack *track = IOSObjectArray_Get(nil_chk(HCMTrack_load__WithNSString_(trackJSON)), 0);
  OrgJunitAssert_assertNotNullWithId_(track);
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMTrack *) nil_chk(track))->id__), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(1000)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(track->name_, OrgHamcrestCoreMatchers_isWithId_(@"Test Raceway"));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_([track numSplits]), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(3)));
}

- (void)trackLoadFailOnId {
  NSString *trackJSON = @"{\"track\": {\"name\": \"Test Raceway\",\"gates\": [{\"gate_type\": \"SPLIT\",\"latitude\": \"37.451775\",\"longitude\": \"-122.203657\",\"bearing\": \"136\",\"split_number\": \"1\"},{\"gate_type\": \"SPLIT\",\"latitude\": \"37.450127\",\"longitude\": \"-122.205499\",\"bearing\": \"326\",\"split_number\": \"2\"},{\"gate_type\": \"START_FINISH\",\"latitude\": \"37.452602\",\"longitude\": \"-122.207069\",\"bearing\": \"32\",\"split_number\": \"3\"}]}}";
  OrgJunitAssert_assertNullWithId_(HCMTrack_load__WithNSString_(trackJSON));
}

- (instancetype)init {
  return [super init];
}

+ (IOSObjectArray *)__annotations_trackLoadFromJSON {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_trackLoadFromJSONArray {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_trackLoadFailOnId {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "trackLoadFromJSON", NULL, "V", 0x1, NULL },
    { "trackLoadFromJSONArray", NULL, "V", 0x1, NULL },
    { "trackLoadFailOnId", NULL, "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _HCMTrackTest = { 1, "TrackTest", "harrycheung.map.shared", NULL, 0x11, 4, methods, 0, NULL, 0, NULL};
  return &_HCMTrackTest;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HCMTrackTest)
