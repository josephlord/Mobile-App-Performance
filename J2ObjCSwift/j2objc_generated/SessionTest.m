//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Java/src/test/java/harrycheung/map/shared/SessionTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Lap.h"
#include "Session.h"
#include "SessionManager.h"
#include "SessionTest.h"
#include "Track.h"
#include "java/io/BufferedReader.h"
#include "java/io/FileReader.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/List.h"
#include "org/hamcrest/CoreMatchers.h"
#include "org/hamcrest/Matcher.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"

@interface HCMSessionTest () {
 @public
  HCMTrack *track_;
}
@end

J2OBJC_FIELD_SETTER(HCMSessionTest, track_, HCMTrack *)

@implementation HCMSessionTest

- (void)setUp {
  NSString *trackJSON = @"{\"track\": {\"id\": \"1000\",\"name\": \"Test Raceway\",\"gates\": [{\"gate_type\": \"SPLIT\",\"latitude\": \"37.451775\",\"longitude\": \"-122.203657\",\"bearing\": \"136\",\"split_number\": \"1\"},{\"gate_type\": \"SPLIT\",\"latitude\": \"37.450127\",\"longitude\": \"-122.205499\",\"bearing\": \"326\",\"split_number\": \"2\"},{\"gate_type\": \"START_FINISH\",\"latitude\": \"37.452602\",\"longitude\": \"-122.207069\",\"bearing\": \"32\",\"split_number\": \"3\"}]}}";
  HCMSessionTest_set_track_(self, IOSObjectArray_Get(nil_chk(HCMTrack_load__WithNSString_(trackJSON)), 0));
}

- (void)tearDown {
  [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) endSession];
}

- (void)singleLapSession {
  JavaIoFileReader *fileReader = [[[JavaIoFileReader alloc] initWithNSString:@"../Shared/Data/single_lap_session.csv"] autorelease];
  JavaIoBufferedReader *bufferedReader = [[[JavaIoBufferedReader alloc] initWithJavaIoReader:fileReader] autorelease];
  NSString *line;
  [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) startSessionWithHCMTrack:track_];
  jdouble startTime = JavaLangSystem_currentTimeMillis() / 1000;
  while ((line = [bufferedReader readLine]) != nil) {
    IOSObjectArray *parts = [((NSString *) nil_chk(line)) split:@","];
    [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) gpsWithDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(nil_chk(parts), 0)) withDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(parts, 1)) withDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(parts, 2)) withDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(parts, 3)) withDouble:5.0 withDouble:15.0 withDouble:startTime];
    startTime += 1;
  }
  HCMSession *session = ((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance()))->session_;
  [bufferedReader close];
  [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) endSession];
  id<JavaUtilList> laps = ((HCMSession *) nil_chk(session))->laps_;
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_([((id<JavaUtilList>) nil_chk(laps)) size]), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(3)));
  OrgJunitAssert_assertFalseWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:0]))->valid_);
  OrgJunitAssert_assertTrueWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:1]))->valid_);
  OrgJunitAssert_assertFalseWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:2]))->valid_);
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:0]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(0)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:1]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(1)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:2]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(2)));
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(120.64222, ((HCMLap *) nil_chk([laps getWithInt:1]))->duration_, 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(35.85215, IOSDoubleArray_Get(nil_chk(((HCMLap *) nil_chk([laps getWithInt:1]))->splits_), 0), 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(38.94201, IOSDoubleArray_Get(((HCMLap *) nil_chk([laps getWithInt:1]))->splits_, 1), 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(45.84806, IOSDoubleArray_Get(((HCMLap *) nil_chk([laps getWithInt:1]))->splits_, 2), 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(1298.63, ((HCMLap *) nil_chk([laps getWithInt:1]))->distance_, 0.01);
}

- (void)multiLapSession {
  JavaIoFileReader *fileReader = [[[JavaIoFileReader alloc] initWithNSString:@"../Shared/Data/multi_lap_session.csv"] autorelease];
  JavaIoBufferedReader *bufferedReader = [[[JavaIoBufferedReader alloc] initWithJavaIoReader:fileReader] autorelease];
  NSString *line;
  [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) startSessionWithHCMTrack:track_];
  jdouble startTime = JavaLangSystem_currentTimeMillis() / 1000;
  while ((line = [bufferedReader readLine]) != nil) {
    IOSObjectArray *parts = [((NSString *) nil_chk(line)) split:@","];
    [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) gpsWithDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(nil_chk(parts), 0)) withDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(parts, 1)) withDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(parts, 2)) withDouble:JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(parts, 3)) withDouble:5.0 withDouble:15.0 withDouble:startTime];
    startTime += 1;
  }
  HCMSession *session = ((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance()))->session_;
  [bufferedReader close];
  [((HCMSessionManager *) nil_chk(HCMSessionManager_getInstance())) endSession];
  id<JavaUtilList> laps = ((HCMSession *) nil_chk(session))->laps_;
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_([((id<JavaUtilList>) nil_chk(laps)) size]), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(6)));
  OrgJunitAssert_assertFalseWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:0]))->valid_);
  OrgJunitAssert_assertTrueWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:1]))->valid_);
  OrgJunitAssert_assertTrueWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:2]))->valid_);
  OrgJunitAssert_assertTrueWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:3]))->valid_);
  OrgJunitAssert_assertTrueWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:4]))->valid_);
  OrgJunitAssert_assertFalseWithBoolean_(((HCMLap *) nil_chk([laps getWithInt:5]))->valid_);
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:0]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(0)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:1]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(1)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:2]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(2)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:3]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(3)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:4]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(4)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_(((HCMLap *) nil_chk([laps getWithInt:5]))->lapNumber_), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(5)));
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(120.64222, ((HCMLap *) nil_chk([laps getWithInt:1]))->duration_, 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(100.01685, ((HCMLap *) nil_chk([laps getWithInt:2]))->duration_, 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(96.74609, ((HCMLap *) nil_chk([laps getWithInt:3]))->duration_, 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(94.61198, ((HCMLap *) nil_chk([laps getWithInt:4]))->duration_, 0.00001);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(1298.63, ((HCMLap *) nil_chk([laps getWithInt:1]))->distance_, 0.01);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(1298.69, ((HCMLap *) nil_chk([laps getWithInt:2]))->distance_, 0.01);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(1306.85, ((HCMLap *) nil_chk([laps getWithInt:3]))->distance_, 0.01);
  OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_(1306.55, ((HCMLap *) nil_chk([laps getWithInt:4]))->distance_, 0.01);
}

- (instancetype)init {
  return [super init];
}

- (void)dealloc {
  RELEASE_(track_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(HCMSessionTest *)other {
  [super copyAllFieldsTo:other];
  HCMSessionTest_set_track_(other, track_);
}

+ (IOSObjectArray *)__annotations_setUp {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitBefore alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_tearDown {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitAfter alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_singleLapSession {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_multiLapSession {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setUp", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "tearDown", NULL, "V", 0x1, NULL },
    { "singleLapSession", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "multiLapSession", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "track_", NULL, 0x2, "Lharrycheung.map.shared.Track;", NULL,  },
  };
  static const J2ObjcClassInfo _HCMSessionTest = { 1, "SessionTest", "harrycheung.map.shared", NULL, 0x11, 5, methods, 1, fields, 0, NULL};
  return &_HCMSessionTest;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HCMSessionTest)
